{"version":3,"sources":["webpack:///./src/pages/docs/minimum-maximum-date.js"],"names":["MinimumMaximumDate","useState","datePicker1Value","setDatePicker1Value","year","month","day","datePicker2Value","setDatePicker2Value","title","className","language","calendarClassName","value","inputPlaceholder","onChange","minimumDate","utils","getToday","shouldHighlightWeekends","maximumDate"],"mappings":"8FAAA,oEAmIeA,UA7HY,WACzB,IAD+B,EAOiBC,mBAAS,MAAlDC,EAPwB,KAONC,EAPM,OAQiBF,mBAP3B,CACnBG,KAAM,KACNC,MAAO,EACPC,IAAK,KAIAC,EARwB,KAQNC,EARM,KAsB/B,OACE,kBAAC,IAAD,CAAMC,MAAM,0BACV,gJAGO,0BAAMC,UAAU,eAAhB,eAHP,QAG4D,0BAAMA,UAAU,eAAhB,cAH5D,iDAOA,wBAAIA,UAAU,wBAAd,uBAEA,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAMC,SAAS,cAAf,udAsBA,kBAAC,WAAD,CACEC,kBAAkB,cAClBC,MAAOX,EACPY,iBAAiB,gBACjBC,SAAUZ,EACVa,YAAaC,kBAAQC,WACrBC,yBAAuB,KAI3B,wBAAIT,UAAU,wBAAd,uCAEA,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAMC,SAAS,cAAf,ouBA2CA,kBAAC,WAAD,CACEC,kBAAkB,cAClBC,MAAON,EACPQ,SAAUP,EACVQ,YA1GY,CAClBZ,KAAM,KACNC,MAAO,EACPC,IAAK,IAwGCc,YArGY,CAClBhB,KAAM,KACNC,MAAO,EACPC,IAAK,IAmGCa,yBAAuB","file":"component---src-pages-docs-minimum-maximum-date-js-53a3f5182e20894c36ce.js","sourcesContent":["import React, { useState } from 'react';\nimport { Calendar, utils } from 'react-modern-calendar-datepicker';\n\nimport Docs from '../../containers/docs';\nimport { Code } from '../../components';\n\nconst MinimumMaximumDate = () => {\n  const defaultValue = {\n    year: 2019,\n    month: 4,\n    day: 15,\n  };\n\n  const [datePicker1Value, setDatePicker1Value] = useState(null);\n  const [datePicker2Value, setDatePicker2Value] = useState(defaultValue);\n\n  const minimumDate = {\n    year: 2019,\n    month: 4,\n    day: 10\n  };\n\n  const maximumDate = {\n    year: 2019,\n    month: 4,\n    day: 21\n  }\n\n  return (\n    <Docs title=\"Minimum & Maximum Date\">\n      <p>\n        There are many cases where you want to somehow limit the user to choose a\n        day in a appropriate range. That&#39;s\n        when <code className=\"custom-code\">minimumDate</code> and <code className=\"custom-code\">mximumDate</code> props\n        come in handy. Here are some examples:\n      </p>\n\n      <h2 className=\"Docs__titleSecondary\">Limiting from Today</h2>\n\n      <div className=\"Docs__sampleContainer\">\n        <Code language=\"javascript\">\n          {`\nimport React, { useState } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar, utils } from \"react-modern-calendar-datepicker\";\n\nconst App = () => {\n  const [selectedDay, setSelectedDay] = useState(null);\n  return (\n    <Calendar\n      value={selectedDay}\n      onChange={setSelectedDay}\n      minimumDate={utils().getToday()}\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          `}\n        </Code>\n        <Calendar\n          calendarClassName=\"fontWrapper\"\n          value={datePicker1Value}\n          inputPlaceholder=\"Select a date\"\n          onChange={setDatePicker1Value}\n          minimumDate={utils().getToday()}\n          shouldHighlightWeekends\n        />\n      </div>\n\n      <h2 className=\"Docs__titleSecondary\">Specifying Both Minimum and Maximum</h2>\n\n      <div className=\"Docs__sampleContainer\">\n        <Code language=\"javascript\">\n          {`\nimport React, { useState } from \"react\";\nimport \"react-modern-calendar-datepicke/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicke\";\n\nconst App = () => {\n  const defaultValue = {\n    year: 2019,\n    month: 4,\n    day: 15\n  };\n\n  const minimumDate = {\n    year: 2019,\n    month: 4,\n    day: 10\n  };\n\n  const maximumDate = {\n    year: 2019,\n    month: 4,\n    day: 21\n  }\n\n  const [selectedDay, setSelectedDay] = useState(\n    defaultValue\n  );\n  return (\n    <Calendar\n      value={selectedDay}\n      onChange={setSelectedDay}\n      minimumDate={minimumDate}\n      maximumDate={maximumDate}\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          `}\n        </Code>\n        <Calendar\n          calendarClassName=\"fontWrapper\"\n          value={datePicker2Value}\n          onChange={setDatePicker2Value}\n          minimumDate={minimumDate}\n          maximumDate={maximumDate}\n          shouldHighlightWeekends\n        />\n      </div>\n    </Docs>\n  );\n};\n\nexport default MinimumMaximumDate;\n"],"sourceRoot":""}