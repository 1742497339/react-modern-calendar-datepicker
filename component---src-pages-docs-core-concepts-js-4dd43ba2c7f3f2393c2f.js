(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{inqi:function(e,a,t){"use strict";t.r(a);var n=t("q1tI"),l=t.n(n),c=t("Wbzz"),r=t("72SN"),o=t.n(r),s=t("dgKS"),d=t("Kvkj");a.default=function(){var e=Object(n.useState)(null),a=e[0],t=e[1],i=Object(n.useState)(null),m=i[0],p=i[1],u=Object(n.useState)({from:null,to:null}),h=u[0],g=u[1],f=Object(n.useState)({from:null,to:null}),E=f[0],k=f[1],y=Object(n.useState)([]),D=y[0],v=y[1];return l.a.createElement(s.a,{title:"Core Concepts"},l.a.createElement("p",null,"Now that you've installed the package. It's the time to get familiarized with the core concepts of react-modern-calendar-datepicker. In a nutshell, there are two major components available to import:"),l.a.createElement("ul",{className:"Docs__list"},l.a.createElement("li",null,"1- ",l.a.createElement("code",{className:"custom-code"},"<DatePicker />")," default-exported component which includes an input and a calendar."),l.a.createElement("li",null,"2- ",l.a.createElement("code",{className:"custom-code"},"<Calendar />")," component which is the calendar itself.")),l.a.createElement("p",null,"These components are similar in many cases. ",l.a.createElement("code",{className:"custom-code"},"<DatePicker />")," just includes an extra input in comparison with ",l.a.createElement("code",{className:"custom-code"},"<Calendar />"),". The simple rule is:"),l.a.createElement("p",{className:"-marginTop -marginBottom"},l.a.createElement("strong",null," You can use almost every prop on both ",l.a.createElement("code",{className:"custom-code"},"<DatePicker />")," and ",l.a.createElement("code",{className:"custom-code"}," ","<Calendar />")," components.")),l.a.createElement("p",{className:"-marginTop -marginBottom"},l.a.createElement("strong",null," Note: ")," To turn this calendar into a another language locale one, ",l.a.createElement(c.a,{className:"Docs__link",to:"/docs/different-locales"}," add this prop"),"."),l.a.createElement("p",null,"By the way, all the examples provided in this document are implemented using ",l.a.createElement("a",{rel:"noopener noreferrer",target:"_blank",className:"Docs__link",href:" https://reactjs.org/docs/hooks-intro.html"}," React hooks "),"."),l.a.createElement("h2",{className:"Docs__titleSecondary"},"Basic Usage"),l.a.createElement("p",null,"Let's kick things off by providing an example:"),l.a.createElement("div",{className:"Docs__sampleContainer"},l.a.createElement(d.a,{language:"javascript"},'\nimport React, { useState } from "react";\nimport "react-modern-calendar-datepicker/lib/DatePicker.css";\nimport DatePicker from "react-modern-calendar-datepicker";\n\nconst App = () => {\n  const [selectedDay, setSelectedDay] = useState(null);\n  return (\n    <DatePicker\n      value={selectedDay}\n      onChange={setSelectedDay}\n      inputPlaceholder="Select a day"\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          '),l.a.createElement(o.a,{wrapperClassName:"fontWrapper -aboveAll",calendarClassName:"fontWrapper",value:a,inputPlaceholder:"Select a day",onChange:t,shouldHighlightWeekends:!0})),l.a.createElement("p",null,"Without the input:"),l.a.createElement("div",{className:"Docs__sampleContainer"},l.a.createElement(d.a,{language:"javascript"},'\nimport React, { useState } from "react";\nimport "react-modern-calendar-datepicker/lib/DatePicker.css";\nimport { Calendar } from "react-modern-calendar-datepicker";\n\nconst App = () => {\n  const [selectedDay, setSelectedDay] = useState(null);\n  return (\n    <Calendar\n      value={selectedDay}\n      onChange={setSelectedDay}\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n                '),l.a.createElement(r.Calendar,{calendarClassName:"fontWrapper",value:m,onChange:p,shouldHighlightWeekends:!0})),l.a.createElement("p",null,"- ",l.a.createElement("code",{className:"custom-code"},"value")," prop is the value of the date picker and ",l.a.createElement("strong",null,"the shape of its initial value, defines the date picker type(single, range, multiple)")),l.a.createElement("p",null,"-",l.a.createElement("code",{className:"custom-code"},"onChange")," is the function which will take care of changing the state using the state hook modifier. All day formats in the picker are like:"),l.a.createElement(d.a,{language:"javascript"},"\nPropTypes.shape({\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  day: PropTypes.number.isRequired,\n})\n              "),l.a.createElement("p",null,"For a more detailed list of props, visit ",l.a.createElement(c.a,{to:"/docs/props-list",className:"Docs__link"},"props list"),"."),l.a.createElement("h2",{className:"Docs__titleSecondary"},"Selecting a Day Range"),l.a.createElement("p",null,"To turn out the picker into a range picker, you need to change the initial ",l.a.createElement("code",{className:"custom-code"},"value"),". Here's an example:"),l.a.createElement("div",{className:"Docs__sampleContainer"},l.a.createElement(d.a,{language:"javascript"},'\nimport React, { useState } from "react";\nimport "react-modern-calendar-datepicker/lib/DatePicker.css";\nimport { Calendar } from "react-modern-calendar-datepicker";\n\nconst App = () => {\n  // ✅ a change in default state: { from: ..., to: ... }\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: null,\n    to: null\n  });\n  return (\n    <Calendar\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          '),l.a.createElement(r.Calendar,{calendarClassName:"fontWrapper",value:h,onChange:g,shouldHighlightWeekends:!0})),l.a.createElement("p",null,"We've used ",l.a.createElement("code",{className:"custom-code"},"from")," on the default state to indicate the starting point of the day range, and ",l.a.createElement("code",{className:"custom-code"},"to")," for the ending point of the day range. Note that you can replace ",l.a.createElement("code",{className:"custom-code"},"<Calendar />")," with",l.a.createElement("code",{className:"custom-code"},"<DatePicker />")," to have the input along with the calendar:"),l.a.createElement("div",{className:"Docs__sampleContainer"},l.a.createElement(d.a,{language:"javascript"},'\nimport React, { useState } from "react";\nimport "react-modern-calendar-datepicker/lib/DatePicker.css";\nimport DatePicker from "react-modern-calendar-datepicker";\n\nconst App = () => {\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: null,\n    to: null\n  });\n  return (\n    <DatePicker\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      inputPlaceholder="Select a day range"\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          '),l.a.createElement(o.a,{wrapperClassName:"fontWrapper -aboveAll",calendarClassName:"fontWrapper",value:E,onChange:k,inputPlaceholder:"Select a day range",shouldHighlightWeekends:!0})),l.a.createElement("h2",{className:"Docs__titleSecondary"},"Selecting Multiple Dates"),l.a.createElement("p",null,"You pass a ",l.a.createElement("code",{className:"custom-code"},"[]")," as a default value, it becomes a multiple date selector."),l.a.createElement("div",{className:"Docs__sampleContainer"},l.a.createElement(d.a,{language:"javascript"},'\n      import React, { useState } from "react";\n      import "react-modern-calendar-datepicker/lib/DatePicker.css";\n      import { Calendar } from "react-modern-calendar-datepicker";\n\n      const App = () => {\n        // ✅ a change in default state: []\n        const [selectedDays, setSelectedDays] = useState([]);\n        return (\n          <Calendar\n            value={selectedDays}\n            onChange={setSelectedDays}\n            shouldHighlightWeekends\n          />\n        );\n      };\n\n      export default App;\n\n                '),l.a.createElement(r.Calendar,{calendarClassName:"fontWrapper",value:D,onChange:v,shouldHighlightWeekends:!0})),l.a.createElement("p",null,"Simple as that! as mentioned above, the shape of ",l.a.createElement("code",{className:"custom-code"},"value")," prop defines the date picker type. Here we passed an empty array."),l.a.createElement("h2",{className:"Docs__titleSecondary"},"Recap"),l.a.createElement("p",null,"So far so good. By now, you should feel pretty comfortable with this picker. In this part, you used ",l.a.createElement("code",{className:"custom-code"},"null")," as the default value for the single date picker, ",l.a.createElement("code",{className:"custom-code"},"{ from: null, to: null }")," as the default value for the range date picker, and ",l.a.createElement("code",{className:"custom-code"},"[]")," as the default value for the mutliple date picker. In the next part, you'll learn more about ",l.a.createElement(c.a,{className:"Docs__link",to:"/docs/default-values"},"default values"),"."))}}}]);
//# sourceMappingURL=component---src-pages-docs-core-concepts-js-4dd43ba2c7f3f2393c2f.js.map