(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{158:function(e,a,t){"use strict";t.r(a);var n=t(0),r=t.n(n),c=t(172),l=t(170),s=t(169);a.default=function(){var e=Object(n.useState)({year:1398,month:1,day:5}),a=e[0],t=e[1],o=Object(n.useState)({from:{year:1398,month:1,day:4},to:{year:1398,month:1,day:7}}),d=o[0],i=o[1];return r.a.createElement(l.a,{title:"Default Values"},r.a.createElement("p",{className:"Docs__paragraph"},"In the previous part, you declared the default state value as some sort of ",r.a.createElement("code",{className:"custom-code"},"null"),". What if you want to use a day(range) as your default state value? Well, it's pretty straightforward. you need to pass your intended day in the correct format instead of ",r.a.createElement("code",{className:"custom-code"},"null"),"."),r.a.createElement("h2",{className:"Docs__titleSecondary"},"Single Date Default Value"),r.a.createElement("div",{className:"Docs__sampleContainer"},r.a.createElement(s.a,{language:"javascript"},'\nimport React, { useState } from "react";\nimport "react-persian-calendar-date-picker/lib/DatePicker.css";\nimport { Calendar } from "react-persian-calendar-date-picker";\n\nconst App = () => {\n  const defaultValue = {\n    year: 1398,\n    month: 1,\n    day: 5,\n  };\n\n  const [selectedDay, setSelectedDay] = useState(defaultValue);\n  return (\n    <Calendar\n      selectedDay={selectedDay}\n      onChange={setSelectedDay}\n    />\n  );\n};\n\nexport default App;\n\n          '),r.a.createElement(c.Calendar,{calendarClassName:"persianFontWrapper",selectedDay:a,inputPlaceholder:"انتخاب روز",onChange:t})),r.a.createElement("h2",{className:"Docs__titleSecondary"},"Range Date Default Value"),r.a.createElement("div",{className:"Docs__sampleContainer"},r.a.createElement(s.a,{language:"javascript"},'\nimport React, { useState } from "react";\nimport "react-persian-calendar-date-picker/lib/DatePicker.css";\nimport { Calendar } from "react-persian-calendar-date-picker";\n\nconst App = () => {\n  const defaultFrom = {\n    year: 1398,\n    month: 1,\n    day: 4,\n  };\n\n  const defaultTo = {\n    year: 1398,\n    month: 1,\n    day: 7,\n  };\n\n  const defaultRange = {\n    from: defaultFrom,\n    to: defaultTo,\n  };\n\n  const [selectedDayRange, setSelectedDayRange] = useState(\n    defaultRange\n  );\n  return (\n    <Calendar\n      selectedDayRange={selectedDayRange}\n      onChange={setSelectedDayRange}\n      isDayRange\n    />\n  );\n};\n\nexport default App;\n\n          '),r.a.createElement(c.Calendar,{calendarClassName:"persianFontWrapper",selectedDayRange:d,onChange:i,isDayRange:!0})))}},170:function(e,a,t){"use strict";var n=t(0),r=t.n(n),c=t(169);t(147);a.a=function(e){var a=e.title,t=e.children;return r.a.createElement(c.d,null,r.a.createElement(c.e,{title:a+" - react-persian-calendar-date-picker",keywords:[a]}),r.a.createElement("div",{className:"Docs"},r.a.createElement(c.c,null),r.a.createElement("div",{className:"Docs__content"},r.a.createElement("h1",{className:"Docs__title"},a),t)))}}}]);
//# sourceMappingURL=component---src-pages-docs-default-values-js-77b950a685b9f49be35e.js.map