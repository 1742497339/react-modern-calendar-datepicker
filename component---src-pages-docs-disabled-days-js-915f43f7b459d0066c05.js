(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{Y1S3:function(e,a,n){"use strict";n.r(a);var t=n("q1tI"),d=n.n(t),s=n("72SN"),r=n("dgKS"),l=n("Kvkj");a.default=function(){var e=Object(t.useState)({year:2019,month:3,day:12}),a=e[0],n=e[1],o=Object(t.useState)({from:{year:2019,month:3,day:12},to:{year:2019,month:3,day:15}}),c=o[0],i=o[1];return d.a.createElement(r.a,{title:"Disabled Day(s)"},d.a.createElement("p",null,"Sometimes, you need to disallow user to select some specific days. ",d.a.createElement("code",{className:"custom-code"},"disabledDays")," prop takes an array of desired disabled days:"),d.a.createElement(l.a,{language:"javascript"},"\nPropTypes.arrayOf(PropTypes.shape({\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  day: PropTypes.number.isRequired,\n}))\n        "),d.a.createElement("p",null,"By passing disabled days, users won't be able to select a disabled day or include one in a range. At such times, ",d.a.createElement("code",{className:"custom-code"},"onDisabledDayError"),"function will get called, and you can show a message to the users."),d.a.createElement("h2",{className:"Docs__titleSecondary"},"Examples"),d.a.createElement("div",{className:"Docs__sampleContainer"},d.a.createElement(l.a,{language:"javascript"},'\nimport React, { useState } from "react";\nimport "react-modern-calendar-datepicker/lib/DatePicker.css";\nimport { Calendar } from "react-modern-calendar-datepicker";\n\nconst App = () => {\n  const defaultValue = {\n    year: 2019,\n    month: 3,\n    day: 12,\n  };\n\n  const disabledDays = [\n    {\n      year: 2019,\n      month: 3,\n      day: 20,\n    },\n    {\n      year: 2019,\n      month: 3,\n      day: 21,\n    },\n    {\n      year: 2019,\n      month: 3,\n      day: 7,\n    }\n  ];\n\n  const [selectedDay, setSelectedDay] = useState(defaultValue);\n\n  const handleDisabledSelect = disabledDay => {\n    console.log(\'Tried selecting a disabled day\', disabledDay);\n  };\n\n  return (\n    <Calendar\n      value={selectedDay}\n      onChange={setSelectedDay}\n      disabledDays={disabledDays} // here we pass them\n      onDisabledDayError={handleDisabledSelect} // handle error\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          '),d.a.createElement(s.Calendar,{calendarClassName:"fontWrapper",value:a,onChange:n,disabledDays:[{year:2019,month:3,day:20},{year:2019,month:3,day:21},{year:2019,month:3,day:7}],shouldHighlightWeekends:!0})),d.a.createElement("div",{className:"Docs__sampleContainer"},d.a.createElement(l.a,{language:"javascript"},'\nimport React, { useState } from "react";\nimport "react-modern-calendar-datepicker/lib/DatePicker.css";\nimport { Calendar } from "react-modern-calendar-datepicker";\n\nconst App = () => {\n  const defaultFrom = {\n    year: 2019,\n    month: 3,\n    day: 12,\n  };\n  const defaultTo = {\n    year: 2019,\n    month: 3,\n    day: 15,\n  };\n\n  const disabledDays = [\n    {\n      year: 2019,\n      month: 3,\n      day: 22,\n    },\n    {\n      year: 2019,\n      month: 3,\n      day: 25,\n    },\n    {\n      year: 2019,\n      month: 3,\n      day: 6,\n    }\n  ];\n\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: defaultFrom,\n    to: defaultTo,\n  });\n\n  const handleDisabledSelect = disabledDay => {\n    console.log(\'Tried including a disabled day\', disabledDay);\n  };\n\n  return (\n    <Calendar\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      disabledDays={disabledDays} // here we pass them\n      onDisabledDayError={handleDisabledSelect} // handle error\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          '),d.a.createElement(s.Calendar,{calendarClassName:"fontWrapper",value:c,onChange:i,disabledDays:[{year:2019,month:3,day:22},{year:2019,month:3,day:25},{year:2019,month:3,day:6}],shouldHighlightWeekends:!0})))}}}]);
//# sourceMappingURL=component---src-pages-docs-disabled-days-js-915f43f7b459d0066c05.js.map