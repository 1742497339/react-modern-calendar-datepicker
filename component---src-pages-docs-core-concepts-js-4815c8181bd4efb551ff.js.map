{"version":3,"sources":["webpack:///./src/pages/docs/core-concepts.js","webpack:///./src/containers/docs.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_lib__WEBPACK_IMPORTED_MODULE_2__","_lib__WEBPACK_IMPORTED_MODULE_2___default","_containers_docs__WEBPACK_IMPORTED_MODULE_3__","_components__WEBPACK_IMPORTED_MODULE_4__","CoreConcepts","_useState","useState","datePicker1Value","setDatePicker1Value","_useState2","datePicker2Value","setDatePicker2Value","_useState3","from","to","datePicker3Value","setDatePicker3Value","_useState4","datePicker4Value","setDatePicker4Value","_useState5","datePicker5Value","setDatePicker5Value","a","createElement","title","className","rel","target","href","language","wrapperClassName","calendarClassName","value","inputPlaceholder","onChange","shouldHighlightWeekends","_components__WEBPACK_IMPORTED_MODULE_1__","Docs","_ref","children","keywords"],"mappings":"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","file":"component---src-pages-docs-core-concepts-js-4815c8181bd4efb551ff.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport DatePicker, { Calendar } from '../../lib';\n\nimport Docs from '../../containers/docs';\nimport { Code } from '../../components';\n\nconst CoreConcepts = () => {\n  const [datePicker1Value, setDatePicker1Value] = useState(null);\n  const [datePicker2Value, setDatePicker2Value] = useState(null);\n  const [datePicker3Value, setDatePicker3Value] = useState({ from: null, to: null });\n  const [datePicker4Value, setDatePicker4Value] = useState({ from: null, to: null });\n  const [datePicker5Value, setDatePicker5Value] = useState([]);\n\n  return (\n    <Docs title=\"Core Concepts\">\n      <p>\n        Now that you&#39;ve installed the package. It&#39;s the time to get familiarized with\n        the core concepts of react-modern-calendar-datepicker. In a\n        nutshell, there are two major components available\n        to import:\n      </p>\n\n      <ul className=\"Docs__list\">\n        <li>1- <code className=\"custom-code\">{`<DatePicker />`}</code> default-exported component which includes an input and a calendar.</li>\n        <li>2- <code className=\"custom-code\">{`<Calendar />`}</code> component which is the calendar itself.</li>\n      </ul>\n\n      <p>\n        These components are similar in many cases. <code className=\"custom-code\">{`<DatePicker />`}</code> just\n        includes an extra input in comparison with <code className=\"custom-code\">{`<Calendar />`}</code>. The simple\n        rule is:\n      </p>\n\n      <p className=\"-marginTop -marginBottom\">\n        <strong> You can use almost every prop\n          on both <code className=\"custom-code\">{`<DatePicker />`}</code> and <code className=\"custom-code\"> {`<Calendar />`}</code> components.</strong>\n      </p>\n\n      <p className=\"-marginTop -marginBottom\">\n        <strong> Note: </strong> To turn this calendar into a Persian one, <Link className=\"Docs__link\" to=\"/docs/persian-calendar\"> add this prop</Link>.\n      </p>\n\n      <p>\n        By the way, all the examples provided in this document are implemented using <a rel=\"noopener noreferrer\" target=\"_blank\" className=\"Docs__link\" href=\" https://reactjs.org/docs/hooks-intro.html\"> React hooks </a>.\n      </p>\n\n      <h2 className=\"Docs__titleSecondary\">Basic Usage</h2>\n\n      <p>\n        Let&#39;s kick things off by providing an example:\n      </p>\n\n      <div className=\"Docs__sampleContainer\">\n        <Code language=\"javascript\">\n          {`\nimport React, { useState } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport DatePicker from \"react-modern-calendar-datepicker\";\n\nconst App = () => {\n  const [selectedDay, setSelectedDay] = useState(null);\n  return (\n    <DatePicker\n      value={selectedDay}\n      onChange={setSelectedDay}\n      inputPlaceholder=\"Select a day\"\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          `}\n        </Code>\n        <DatePicker\n          wrapperClassName=\"fontWrapper -aboveAll\"\n          calendarClassName=\"fontWrapper\"\n          value={datePicker1Value}\n          inputPlaceholder=\"Select a day\"\n          onChange={setDatePicker1Value}\n          shouldHighlightWeekends\n        />\n      </div>\n\n      <p>\n        Without the input:\n      </p>\n\n      <div className=\"Docs__sampleContainer\">\n              <Code language=\"javascript\">\n                {`\nimport React, { useState } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\n\nconst App = () => {\n  const [selectedDay, setSelectedDay] = useState(null);\n  return (\n    <Calendar\n      value={selectedDay}\n      onChange={setSelectedDay}\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n                `}\n              </Code>\n              <Calendar\n                calendarClassName=\"fontWrapper\"\n                value={datePicker2Value}\n                onChange={setDatePicker2Value}\n                shouldHighlightWeekends\n              />\n            </div>\n\n      <p>\n       - <code className=\"custom-code\">value</code> prop\n        is the value of the date picker and <strong>the shape of its initial value, defines the date picker type(single, range, multiple)</strong>\n      </p>\n      <p>\n      -<code className=\"custom-code\">onChange</code> is\n      the function which\n      will take care of changing the state using the state hook modifier. All day formats\n      in the picker are like:\n      </p>\n\n      <Code language=\"javascript\">\n              {`\nPropTypes.shape({\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  day: PropTypes.number.isRequired,\n})\n              `}\n            </Code>\n\n      <p>\n        For a more detailed list of props,\n        visit <Link to=\"/docs/props-list\" className=\"Docs__link\">props list</Link>.\n      </p>\n\n      <h2 className=\"Docs__titleSecondary\">Selecting a Day Range</h2>\n      <p>\n        To turn out the picker into a range picker, you need to\n        change the initial <code className=\"custom-code\">value</code>. Here&#39;s an example:\n      </p>\n\n      <div className=\"Docs__sampleContainer\">\n        <Code language=\"javascript\">\n          {`\nimport React, { useState } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\n\nconst App = () => {\n  // ✅ a change in default state: { from: ..., to: ... }\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: null,\n    to: null\n  });\n  return (\n    <Calendar\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          `}\n        </Code>\n        <Calendar\n          calendarClassName=\"fontWrapper\"\n          value={datePicker3Value}\n          onChange={setDatePicker3Value}\n          shouldHighlightWeekends\n        />\n      </div>\n\n      <p>\n        We&#39;ve used <code className=\"custom-code\">from</code> on the default state to indicate\n        the starting point of the day range, and <code className=\"custom-code\">to</code> for\n        the ending point of the day range. Note that you can\n        replace <code className=\"custom-code\">{`<Calendar />`}</code> with\n        <code className=\"custom-code\">{`<DatePicker />`}</code> to have the input along with the calendar:\n      </p>\n\n      <div className=\"Docs__sampleContainer\">\n        <Code language=\"javascript\">\n          {`\nimport React, { useState } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport DatePicker from \"react-modern-calendar-datepicker\";\n\nconst App = () => {\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: null,\n    to: null\n  });\n  return (\n    <DatePicker\n      value={selectedDayRange}\n      onChange={setSelectedDayRange}\n      inputPlaceholder=\"Select a day range\"\n      shouldHighlightWeekends\n    />\n  );\n};\n\nexport default App;\n\n          `}\n        </Code>\n        <DatePicker\n          wrapperClassName=\"fontWrapper -aboveAll\"\n          calendarClassName=\"fontWrapper\"\n          value={datePicker4Value}\n          onChange={setDatePicker4Value}\n          inputPlaceholder=\"Select a day range\"\n          shouldHighlightWeekends\n        />\n      </div>\n      <h2 className=\"Docs__titleSecondary\">Selecting Multiple Dates</h2>\n      <p>You pass a <code className=\"custom-code\">[]</code> as a default value, it becomes a multiple date selector.</p>\n      <div className=\"Docs__sampleContainer\">\n              <Code language=\"javascript\">\n                {`\n      import React, { useState } from \"react\";\n      import \"react-modern-calendar-datepicker/lib/DatePicker.css\";\n      import { Calendar } from \"react-modern-calendar-datepicker\";\n\n      const App = () => {\n        // ✅ a change in default state: []\n        const [selectedDays, setSelectedDays] = useState([]);\n        return (\n          <Calendar\n            value={selectedDays}\n            onChange={setSelectedDays}\n            shouldHighlightWeekends\n          />\n        );\n      };\n\n      export default App;\n\n                `}\n              </Code>\n              <Calendar\n                calendarClassName=\"fontWrapper\"\n                value={datePicker5Value}\n                onChange={setDatePicker5Value}\n                shouldHighlightWeekends\n              />\n            </div>\n      <p>Simple as that! as mentioned above, the shape of <code className=\"custom-code\">value</code> prop defines the date picker type. Here\n       we passed an empty array.</p>\n      <h2 className=\"Docs__titleSecondary\">Recap</h2>\n      <p>\n        So far so good. By now, you should feel pretty comfortable with this picker. In this\n        part, you used <code className=\"custom-code\">null</code> as the default value for the single date\n        picker, <code className=\"custom-code\">{`{ from: null, to: null }`}</code> as the default\n        value for the range date picker, and <code className=\"custom-code\">[]</code> as the default\n        value for the mutliple date picker. In the next part, you&#39;ll learn more\n        about <Link className=\"Docs__link\" to=\"/docs/default-values\">default values</Link>.\n      </p>\n    </Docs>\n  );\n};\n\nexport default CoreConcepts;\n","import React from 'react';\n\nimport { Layout, SEO, DocsNav } from '../components';\n\nimport './docs.css';\n\nconst Docs = ({ title, children }) => {\n  return (\n    <Layout>\n      <SEO\n        title={`${title} - react-modern-calendar-datepicker`}\n        keywords={[title]}\n      />\n      <div className=\"Docs\">\n        <DocsNav />\n        <div className=\"Docs__content\">\n          <h1 className=\"Docs__title\">{title}</h1>\n          {children}\n        </div>\n      </div>\n    </Layout>\n  )\n};\n\nexport default Docs;\n"],"sourceRoot":""}