{"version":3,"sources":["webpack:///./src/pages/docs/core-concepts.js","webpack:///./src/containers/docs.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_persian_calendar_date_picker__WEBPACK_IMPORTED_MODULE_1__","react_persian_calendar_date_picker__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_containers_docs__WEBPACK_IMPORTED_MODULE_3__","_components__WEBPACK_IMPORTED_MODULE_4__","CoreConcepts","_useState","useState","datePicker1Value","setDatePicker1Value","_useState2","datePicker2Value","setDatePicker2Value","_useState3","from","to","datePicker3Value","setDatePicker3Value","_useState4","datePicker4Value","setDatePicker4Value","a","createElement","title","className","rel","target","href","language","wrapperClassName","calendarClassName","selectedDay","inputPlaceholder","onChange","selectedDayRange","isDayRange","_components__WEBPACK_IMPORTED_MODULE_1__","Docs","_ref","children","keywords"],"mappings":"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","file":"component---src-pages-docs-core-concepts-js-f20e20f5d73451dc5454.js","sourcesContent":["import React, { useState } from 'react';\nimport DatePicker, { Calendar } from 'react-persian-calendar-date-picker';\nimport { Link } from 'gatsby';\n\nimport Docs from '../../containers/docs';\nimport { Code } from '../../components';\n\nconst CoreConcepts = () => {\n  const [datePicker1Value, setDatePicker1Value] = useState(null);\n  const [datePicker2Value, setDatePicker2Value] = useState(null);\n  const [datePicker3Value, setDatePicker3Value] = useState({ from: null, to: null });\n  const [datePicker4Value, setDatePicker4Value] = useState({ from: null, to: null });\n\n  return (\n    <Docs title=\"Core Concepts\">\n      <p className=\"Docs__paragraph\">\n        Now that you&#39;ve installed the package. It&#39;s the time to get familiarized with\n        the core concepts of react-persian-calendar-date-picker. In a\n        nutshell, there are two major components available\n        to import:\n      </p>\n\n      <ul className=\"Docs__list\">\n        <li>1- <code className=\"custom-code\">{`<DatePicker />`}</code> default-exported component which includes an input and a calendar.</li>\n        <li>2- <code className=\"custom-code\">{`<Calendar />`}</code> component which is the calendar itself.</li>\n      </ul>\n\n      <p className=\"Docs__paragraph\">\n        These components are similar in many cases. <code className=\"custom-code\">{`<DatePicker />`}</code> just\n        includes an extra input in comparison with <code className=\"custom-code\">{`<Calendar />`}</code>. The simple\n        rule is:\n      </p>\n\n      <p className=\"Docs__paragraph -marginTop -marginBottom\">\n        <strong> You can use almost every prop\n          on both <code className=\"custom-code\">{`<DatePicker />`}</code> and <code className=\"custom-code\"> {`<Calendar />`}</code> components.</strong>\n      </p>\n\n      <p className=\"Docs__paragraph\">\n        By the way, all the examples provided in this document are implemented using <a rel=\"noopener noreferrer\" target=\"_blank\" className=\"Docs__link\" href=\" https://reactjs.org/docs/hooks-intro.html\"> React hooks </a>.\n      </p>\n\n      <h2 className=\"Docs__titleSecondary\">Basic Usage</h2>\n\n      <p className=\"Docs__paragraph\">\n        Let&#39;s kick things off by providing an example:\n      </p>\n\n      <div className=\"Docs__sampleContainer\">\n        <Code language=\"javascript\">\n          {`\nimport React, { useState } from \"react\";\nimport \"react-persian-calendar-date-picker/lib/DatePicker.css\";\nimport DatePicker from \"react-persian-calendar-date-picker\";\n\nconst App = () => {\n  const [selectedDay, setSelectedDay] = useState(null);\n  return (\n    <DatePicker\n      selectedDay={selectedDay}\n      onChange={setSelectedDay}\n      inputPlaceholder=\"انتخاب روز\"\n    />\n  );\n};\n\nexport default App;\n\n          `}\n        </Code>\n        <DatePicker\n          wrapperClassName=\"persianFontWrapper -aboveAll\"\n          calendarClassName=\"persianFontWrapper\"\n          selectedDay={datePicker1Value}\n          inputPlaceholder=\"انتخاب روز\"\n          onChange={setDatePicker1Value}\n        />\n      </div>\n\n      <p className=\"Docs__paragraph\">\n        Without the input:\n      </p>\n\n      <div className=\"Docs__sampleContainer\">\n              <Code language=\"javascript\">\n                {`\nimport React, { useState } from \"react\";\nimport \"react-persian-calendar-date-picker/lib/DatePicker.css\";\nimport { Calendar } from \"react-persian-calendar-date-picker\";\n\nconst App = () => {\n  const [selectedDay, setSelectedDay] = useState(null);\n  return (\n    <Calendar\n      selectedDay={selectedDay}\n      onChange={setSelectedDay}\n    />\n  );\n};\n\nexport default App;\n\n                `}\n              </Code>\n              <Calendar\n                calendarClassName=\"persianFontWrapper\"\n                selectedDay={datePicker2Value}\n                onChange={setDatePicker2Value}\n              />\n            </div>\n\n      <p className=\"Docs__paragraph\">\n       <code className=\"custom-code\">selectedDay</code> prop\n        is the value of the date picker, and <code className=\"custom-code\">onChange</code> is\n        the function which\n        will take care of changing the state using the state hook modifier. All day formats\n        in the picker are like:\n      </p>\n\n      <Code language=\"javascript\">\n              {`\nPropTypes.shape({\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  day: PropTypes.number.isRequired,\n})\n              `}\n            </Code>\n\n      <p className=\"Docs__paragraph\">\n        For a more detailed list of props,\n        visit <Link to=\"/docs/props-list\" className=\"Docs__link\">props list</Link>.\n      </p>\n\n      <h2 className=\"Docs__titleSecondary\">Selecting a Day Range</h2>\n      <p className=\"Docs__paragraph\">\n        To turn out the picker into a range picker, you need to\n        add <code className=\"custom-code\">isDayRange</code> prop and\n        replace <code className=\"custom-code\">selectedDay</code> prop\n        with <code className=\"custom-code\">selectedDayRange</code>. Remember to change\n        the default state. Here&#39;s an example:\n      </p>\n\n      <div className=\"Docs__sampleContainer\">\n        <Code language=\"javascript\">\n          {`\nimport React, { useState } from \"react\";\nimport \"react-persian-calendar-date-picker/lib/DatePicker.css\";\nimport { Calendar } from \"react-persian-calendar-date-picker\";\n\nconst App = () => {\n  // a change in default state\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: null,\n    to: null\n  });\n  return (\n    <Calendar\n      selectedDayRange={selectedDayRange} // this is required\n      onChange={setSelectedDayRange}\n      isDayRange // this line too!\n    />\n  );\n};\n\nexport default App;\n\n          `}\n        </Code>\n        <Calendar\n          calendarClassName=\"persianFontWrapper\"\n          selectedDayRange={datePicker3Value}\n          onChange={setDatePicker3Value}\n          isDayRange\n        />\n      </div>\n\n      <p className=\"Docs__paragraph\">\n        We&#39;ve used <code className=\"custom-code\">from</code> on the default state to indicate\n        the starting point of the day range, and <code className=\"custom-code\">to</code> for\n        the ending point of the day range. Note that you can\n        replace <code className=\"custom-code\">{`<Calendar />`}</code> with\n        <code className=\"custom-code\">{`<DatePicker />`}</code> to have the input along with the calendar:\n      </p>\n\n      <div className=\"Docs__sampleContainer\">\n        <Code language=\"javascript\">\n          {`\nimport React, { useState } from \"react\";\nimport \"react-persian-calendar-date-picker/lib/DatePicker.css\";\nimport DatePicker from \"react-persian-calendar-date-picker\";\n\nconst App = () => {\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: null,\n    to: null\n  });\n  return (\n    <DatePicker\n      selectedDayRange={selectedDayRange}\n      onChange={setSelectedDayRange}\n      inputPlaceholder=\"انتخاب روزهای نمایش\"\n      isDayRange\n    />\n  );\n};\n\nexport default App;\n\n          `}\n        </Code>\n        <DatePicker\n          wrapperClassName=\"persianFontWrapper -aboveAll\"\n          calendarClassName=\"persianFontWrapper\"\n          selectedDayRange={datePicker4Value}\n          onChange={setDatePicker4Value}\n          inputPlaceholder=\"انتخاب روزهای نمایش\"\n          isDayRange\n        />\n      </div>\n      <p className=\"Docs__paragraph\">\n        So far so good. By now, you should feel pretty comfortable with this picker. In this\n        part, you used <code className=\"custom-code\">null</code> as the default value for the single date\n        picker and similarly, <code className=\"custom-code\">{`{ from: null, to: null }`}</code> as the default\n        value for the range date picker. In the next part, you&#39;ll learn more\n        about <Link className=\"Docs__link\" to=\"/docs/default-values\">default values</Link>.\n      </p>\n    </Docs>\n  );\n};\n\nexport default CoreConcepts;\n","import React from 'react';\n\nimport { Layout, SEO, DocsNav } from '../components';\n\nimport './docs.css';\n\nconst Docs = ({ title, children }) => {\n  return (\n    <Layout>\n      <SEO\n        title={`${title} - react-persian-calendar-date-picker`}\n        keywords={[title]}\n      />\n      <div className=\"Docs\">\n        <DocsNav />\n        <div className=\"Docs__content\">\n          <h1 className=\"Docs__title\">{title}</h1>\n          {children}\n        </div>\n      </div>\n    </Layout>\n  )\n};\n\nexport default Docs;\n"],"sourceRoot":""}